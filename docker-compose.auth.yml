version: "3.4"

services:
  ontop:
    build:
      context: ./
      dockerfile: infrastructure/docker/ontop/Dockerfile
      target: dev
    env_file: .env
    restart: unless-stopped
    environment:
      ONTOP_ONTOLOGY_FILE: /opt/ontop/input/odh.ttl
      ONTOP_MAPPING_FILE: /opt/ontop/input/odh.obda
      ONTOP_PROPERTIES_FILE: /opt/ontop/input/odh.docker.properties
      ONTOP_PORTAL_FILE: /opt/ontop/input/odh.portal.toml
      ONTOP_PREDEFINED_CONFIG: /opt/ontop/input/predefined/predefined.json
      ONTOP_PREDEFINED_QUERIES: /opt/ontop/input/predefined/queries.toml
      ONTOP_CONTEXTS: /opt/ontop/input/predefined/contexts.json
      ONTOP_CORS_ALLOWED_ORIGINS: "*"
      ONTOP_DEV_MODE: "true"
      EXTRA_FLYWAY_OPTIONS: "-mixed=true"
    volumes:
      - ./vkg:/opt/ontop/input
      - ./jdbc:/opt/ontop/jdbc
      - ./src:/opt/ontop/src
    entrypoint:
      [
        "/wait-for-it.sh",
        "master-db:5432",
        "--timeout=0",
        "--strict",
        "--",
        "/entrypoint.sh",
      ]
  oauth2:
    image: quay.io/oauth2-proxy/oauth2-proxy:v6.1.1
    environment:
      OAUTH2_PROXY_PROVIDER: "keycloak"
      OAUTH2_PROXY_CLIENT_ID: "$KEYCLOAK_CLIENT_ID"
      OAUTH2_PROXY_CLIENT_SECRET: "$KEYCLOAK_CLIENT_SECRET"
      OAUTH2_PROXY_COOKIE_SECRET: "$OAUTH2_COOKIE_SECRET"
      OAUTH2_PROXY_LOGIN_URL: "$KEYCLOAK_REALM/protocol/openid-connect/auth"
      OAUTH2_PROXY_REDEEM_URL: "$KEYCLOAK_REALM/protocol/openid-connect/token"
      OAUTH2_PROXY_VALIDATE_URL: "$KEYCLOAK_REALM/protocol/openid-connect/userinfo"
      OAUTH2_PROXY_HTTP_ADDRESS: "0.0.0.0:4180"
      OAUTH2_PROXY_EMAIL_DOMAINS: "${OAUTH2_ALLOWED_EMAIL_DOMAINS}"
      # development-only
      OAUTH2_PROXY_COOKIE_SECURE: "false"
      OAUTH2_PROXY_REDIRECT_URL: "http://localhost:${SERVER_PORT}/oauth2/callback"
  nginx:
    build:
      context: ./
      dockerfile: infrastructure/docker/nginx/Dockerfile
    env_file: .env
    ports:
      - "${SERVER_PORT}:80"
  master-db:
    image: ontopicvkg/odh-tourism-db:master
    environment:
      - POSTGRES_USER=tourismuser
      - POSTGRES_PASSWORD=postgres2
    ports:
      - "${DEV_MASTER_POSTGRES_PORT}:5432"
  slave-db:
    image: postgres:12.1
    shm_size: 1g
    ports:
      - "${MAPPED_POSTGRES_PORT}:5432"
    command: ["postgres", "-c", "wal_level=logical"]
    environment:
      - POSTGRES_USER=tourismuser
      - POSTGRES_PASSWORD=postgres2
